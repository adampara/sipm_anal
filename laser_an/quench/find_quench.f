      REAL FUNCTION find_quench()

c     ***   histogram the time and charge of pulses 

*********************************************************
*                                                       *
* This file was generated by HUWFUN.                    *
*                                                       *
*********************************************************
*
*     Ntuple Id:      50   
*     Ntuple Title:   Pulses
*     Creation:       15/09/2013 18.37.08
*
*********************************************************
*
      LOGICAL         CHAIN
      CHARACTER*128   CFILE
      INTEGER         IDNEVT,NCHEVT,ICHEVT
      REAL            OBS(13)
*
      COMMON /PAWIDN/ IDNEVT,OBS
      COMMON /PAWCHN/ CHAIN, NCHEVT, ICHEVT
      COMMON /PAWCHC/ CFILE
*
*--   Ntuple Variable Declarations
*
      REAL xlgate(100),gate(10),start,q(10),q_r1(10),q_r2(10),q_r3(10)
     + ,q_r4(10),t(50),t_bef(50),t_aft(50),chi_peak(50),chi_3tau(50)
     + ,ampl(50),wid66(50),wid50(50),wid33(50),q_bef(50),pulse(100,50)
      INTEGER Nwf,N_puls
*
      COMMON /PAWCR4/ Nwf,xlgate,gate,start,q,q_r1,q_r2,q_r3,q_r4,N_puls
     + ,t,t_bef,t_aft,chi_peak,chi_3tau,ampl,wid66,wid50,wid33,q_bef
     + ,pulse
      common/wave/waveform(10000)
      vector np

      vector sampl
      vector subtract
      vector reconstr
      vector pe_value
      vector f_wave

      call vzero(waveform,10000)
      call vzero(subtract,10000)
      call vzero(f_wave,10000)
*     
c     ***   reconstruct the original waveform from the individual pulses data
      
      np(1) = N_puls
      np(2) = Nwf
c     do i = 1,2
      do i = 1,N_puls

c     print *,i,t(i),ampl(i),t_aft(i)
         ipos = t(i)/sampl(1)
         xn=ampl(i)

         print *,ipos,xn, iposp,wid66(i),chi_peak(i),q_bef(i),t_bef(i)

c     ***   add the pulse to wavefom
         call accumulate(ipos,xn,waveform)
c     ***   histogram the subtracted waveform
c
c           do not histogram oulses, but rather non-quenched pulses (later)
c           *************************
c         call hist_pulse(ipos,i,110+i,xn)

c     ***   reconstruct the original waveform by adding the subtracion to the pulse data
c     ***   in the pulse data the peak maximum is at bin 20
         do j = 1,100
            reconstr(j+ipos-20) =
     +           subtract(j+ipos-20)+pulse(j,i)
         enddo

c     accumulate pulses for the subtracion
         call accumulate(ipos,xn,subtract)
      enddo

c     ***   histogram the wave as a superposition of pulses (waveform)
      call hist_array(102,waveform) 
c      call hist_wave(102) 
c     ***   histogram the reconstruted raw data     
      call hist_array(103,reconstr)

c        it looks like the template has an undershoot (July 4, 2014) which makes
c        the reconstructed waveform heading lower then the original one


*--   Enter user code here
*     

*     vector reconstr holds the reconstructed waveform

c     *** candidate for non-quenched pulse: at least n_mult pulses
c     ***    withing twindow form a current pulse

c     ***  non-quenched pulse candidate considered ended when the
c     ***  waveform falls below xfall*pe

      n_mult = 3
      twindow = 2.5e-8

      xfall = 0.5
      thresh = pe_value(1)*xfall


      i_trail = 0

      n_quench = 0

      do i = 1,N_puls

         ipos = t(i)/sampl(1)
         xn=ampl(i)

c     ***  do not consider pulses before i_trail, they are a part
c     ***  of a non-quenched pulse
         if(ipos.lt.i_trail) goto 100

c     ***   non-quenched pulses are rising   !!!  re-visit this  !!
         call slope(sl,reconstr,ipos) 
         print *,ipos,xn, '  slope  ',sl
         if(sl.lt.0) goto 20

         if(i+n_mult.lt.N_puls) then
c     ***  there must be enough pulses left to be a candidate   
            if(t(i+n_mult)-t(i).lt.twindow) then
c     *** n_mult pulses withnin a winow, it is a non-quenched pulse
               do kk = ipos,10000
                  if(reconstr(kk).gt.thresh) then
                     i_trail = kk
                     f_wave(kk)=pe_value(1)
                  else
c     *** found the end of the pulse
                     print *,'long pulse', ipos, 
     +                '  end of the pulse ', kk
                     n_quench = n_quench + 1
                     call hist_quench(110+n_quench,reconstr,
     +                               ipos-100,kk+100)
                     goto 100
                  endif
               enddo
            endif
c     ***    regular pulse
 20         call accumulate(ipos,xn,f_wave)
            print *,'  regular pulse ',ipos,xn
            goto 100

c     *******   check if the last pulse(s) needs to be added..
         endif

         call accumulate(ipos,xn,f_wave)
         print *,'  regular pulse ',ipos,xn

 100     continue

      enddo

      call hist_array(104,f_wave)
      
      print *,'  no quench oulses ',n_quench

      find_quench = 0
*     
      END


      subroutine slope(sl,array,ipos)

c     ***    fir straight line to N points of the array, staring at position ipos 
c     ***    return the slope of the line

      real array(10000)

      N=6

      a11=0
      a12=0
      a21=0
      a22=0
      b1=0
      b2=0

      do i=1,N
         j = ipos - 1 + i
         a11 = a11 + i**2
         a12 = a12 + i
         b1 = b1 + i*array(j)
         b2 = b2 + array(j)  
      enddo

      a21 = a12
      a22 = N

      sl = (b1*a22 - b2*a12)/(a11*a22 - a12*a21)

      end
      subroutine accumulate(ipos,xn,array)

c        add the standrad pulse (in vector templ) at the position ipos and 
c        with the amplitude xn to the waveform 'array'
      vector templ
      real array(10000)

      do i=1,1000
         array(ipos+i-201) = array(ipos+i-201) +
     +        xn*templ(i)
      enddo

      end

      subroutine hist_pulse(ipos,np,idh)

      REAL xlgate(100),gate(10),start,q(10),q_r1(10),q_r2(10),q_r3(10)
     + ,q_r4(10),t(50),t_bef(50),t_aft(50),chi_peak(50),chi_3tau(50)
     + ,ampl(50),wid66(50),wid50(50),wid33(50),q_bef(50),pulse(100,50)
      INTEGER Nwf,N_puls
*
      COMMON /PAWCR4/ Nwf,xlgate,gate,start,q,q_r1,q_r2,q_r3,q_r4,N_puls
     + ,t,t_bef,t_aft,chi_peak,chi_3tau,ampl,wid66,wid50,wid33,q_bef
     + ,pulse

      common/wave/waveform(10000)
      vector subtract
      
      do i = 1,100
        call hfill(idh,float(i+ipos-20)-0.5,0,
     +       subtract(i+ipos-20)+pulse(i,np))
      enddo
      end
      subroutine hist_wave(idh)
c     -------------------------
      common/wave/waveform(10000)

      do i=1,10000
         call hfill(idh,i-0.5,0.,waveform(i))
      enddo

      end
      subroutine hist_array(idh,array)
c     -------------------------
      real array(10000)

      do i=1,10000
         call hfill(idh,i-0.5,0.,array(i))
      enddo

      end
      subroutine hist_quench(idh,array,i1,i2)
c     -------------------------
      real array(10000)

      do i=i1,i2
         call hfill(idh,i+0.5-i1,0.,array(i))
      enddo

      end
