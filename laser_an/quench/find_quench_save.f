      REAL FUNCTION find_quench()

c     ***   histogram the time and charge of pulses 

*********************************************************
*                                                       *
* This file was generated by HUWFUN.                    *
*                                                       *
*********************************************************
*
*     Ntuple Id:      50   
*     Ntuple Title:   Pulses
*     Creation:       15/09/2013 18.37.08
*
*********************************************************
*
      LOGICAL         CHAIN
      CHARACTER*128   CFILE
      INTEGER         IDNEVT,NCHEVT,ICHEVT
      REAL            OBS(13)
*
      COMMON /PAWIDN/ IDNEVT,OBS
      COMMON /PAWCHN/ CHAIN, NCHEVT, ICHEVT
      COMMON /PAWCHC/ CFILE
*
*--   Ntuple Variable Declarations
*
      REAL xlgate(100),gate(10),start,q(10),q_r1(10),q_r2(10),q_r3(10)
     + ,q_r4(10),t(50),t_bef(50),t_aft(50),chi_peak(50),chi_3tau(50)
     + ,ampl(50),wid66(50),wid50(50),wid33(50),q_bef(50),pulse(100,50)
      INTEGER Nwf,N_puls
*
      COMMON /PAWCR4/ Nwf,xlgate,gate,start,q,q_r1,q_r2,q_r3,q_r4,N_puls
     + ,t,t_bef,t_aft,chi_peak,chi_3tau,ampl,wid66,wid50,wid33,q_bef
     + ,pulse
      common/wave/waveform(10000)
      vector np
      vector amp
      vector tim
      vector sampl
      vector subtract
      vector reconstr
      vector pe_value
      vector f_wave

      call vzero(waveform,10000)
      call vzero(subtract,10000)
      call vzero(f_wave,10000)
*
*
      np(1) = N_puls
      np(2) = Nwf
c      do i = 1,2
      do i = 1,N_puls
         amp(i) = ampl(i)
         tim(i) = t(i)
c         print *,i,t(i),ampl(i),t_aft(i)
         ipos = tim(i)/sampl(1)
         xn=ampl(i)

         print *,ipos,xn, iposp,wid66(i),chi_peak(i),q_bef(i)
         call add_templ(ipos,xn)
         call hist_pulse(ipos,i,110+i,xn)
      do j = 1,100
c         print *,i, subtract(i+ipos-200-20),pulse(i,np)
        reconstr(j+ipos-20) =
     +       subtract(j+ipos-20)+pulse(j,i)
      enddo

         call accumulate(ipos,xn,subtract)
      enddo

      call hist_wave(102)      
      call hist_array(103,reconstr)

*--   Enter user code here
*     

*       vector reconstr holds the reconstructed waveform

      n_mult = 1
      twindow = 1.e-8
      xfall = 0.5
      thresh = pe_value(1)*xfall
      i_trail = 0
      do i = 1,N_puls

         ipos = tim(i)/sampl(1)
         xn=ampl(i)
         if(ipos.lt.i_trail) goto 100
         call slope(sl,reconstr,ipos) 
         print *,ipos,xn, '  slope  ',sl
         if(sl.lt.0) goto 20

         if(i+n_mult.lt.N_puls) then
            if(t(i+n_mult)-t(i).lt.twindow) then

               do kk = ipos,10000
                   if(reconstr(kk).gt.thresh) then
                      i_trail = kk
                      f_wave(kk)=pe_value(1)
                   else
c               *** found the end of the pulse
                      print *,'  end of the pulse ', kk
                      goto 100
                   endif
                enddo
            endif
c               ***    regular pulse
 20         call accumulate(ipos,xn,f_wave)
            print *,'  regular pulse ',ipos,xn
               goto 100

c     *******   check if the last pulse(s) needs to be added..
         endif
         call accumulate(ipos,xn,f_wave)
         print *,'  regular pulse ',ipos,xn

 100     continue

      enddo

      call hist_array(104,f_wave)

      find_quench = 0
*
      END
      subroutine slope(sl,array,ipos)
      real array(10000)

      N=6

      a11=0
      a12=0
      a21=0
      a22=0
      b1=0
      b2=0

      do i=1,N
        j = ipos - 1 + i
        a11 = a11 + i**2
        a12 = a12 + i
        b1 = b1 + i*array(j)
        b2 = b2 + array(j)  

c        print *,'   fit  ',j,array(j)
      enddo

      a21 = a12
      a22 = N

c      print *,  a11, '  ', a12, '  ',b1
c      print *,  a21, '  ', a22, '  ',b2

      sl = (b1*a22 - b2*a12)/(a11*a22 - a12*a21)

      end
      subroutine accumulate(ipos,xn,array)
      vector templ
      real array(10000)

      do i=1,1000
         array(ipos+i-201) = array(ipos+i-201) +
     +                     xn*templ(i)
      enddo

      end
      subroutine hist_pulse(ipos,np,idh)

      REAL xlgate(100),gate(10),start,q(10),q_r1(10),q_r2(10),q_r3(10)
     + ,q_r4(10),t(50),t_bef(50),t_aft(50),chi_peak(50),chi_3tau(50)
     + ,ampl(50),wid66(50),wid50(50),wid33(50),q_bef(50),pulse(100,50)
      INTEGER Nwf,N_puls
*
      COMMON /PAWCR4/ Nwf,xlgate,gate,start,q,q_r1,q_r2,q_r3,q_r4,N_puls
     + ,t,t_bef,t_aft,chi_peak,chi_3tau,ampl,wid66,wid50,wid33,q_bef
     + ,pulse

      common/wave/waveform(10000)
      vector subtract
      
      do i = 1,100
c         print *,i, subtract(i+ipos-200-20),pulse(i,np)
        call hfill(idh,float(i+ipos-20)-0.5,0,
     +       subtract(i+ipos-20)+pulse(i,np))
      enddo
      end
      subroutine hist_wave(idh)
c     -------------------------
      common/wave/waveform(10000)

      do i=1,10000
         call hfill(idh,i-0.5,0.,waveform(i))
      enddo

      end
      subroutine hist_array(idh,array)
c     -------------------------
      real array(10000)

      do i=1,10000
         call hfill(idh,i-0.5,0.,array(i))
      enddo

      end
      subroutine add_templ(ipos,xnorm)
c     ------------------------------------------

      common/wave/waveform(10000),subtract(10000)
      vector templ 

      do i=1,1000
         waveform(ipos+i-201) = waveform(ipos+i-201) +
     +                     xnorm*templ(i)
      enddo

      end
