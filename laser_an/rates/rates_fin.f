      REAL FUNCTION rates_fin(idh,tdark,tlaser)

*********************************************************
*                                                       *
* This file was generated by HUWFUN.                    *
*                                                       *
*********************************************************
*
*     Ntuple Id:      60   
*     Ntuple Title:   Pulses_fin
*     Creation:       24/07/2014 11.08.14
*
*********************************************************
*

c       ***    called with idh = 401
c              401   time of all pulses, all waveforms
c              402   time of all pulses, eighted with ampliude, all waveforms
c              431   time of the first pulse, starting at tdark
c              432   time of the first pulse, starting at tdark, weighted with amplitude
c              461   time of the first pulse, starting at tlaser
c              462   time of the first pulse, starting at tlaser, weighted with amplitude
c              481   time between two pulses

c              501   time of all pulses, no response to laser
c              502   time of all pulses, eighted with ampliude, all no response to laser
c              531   time of the first pulse, starting at tdark
c              532   time of the first pulse, starting at tdark, weighted with amplitude
c              561   time of the first pulse, starting at tlaser
c              562   time of the first pulse, starting at tlaser, weighted with amplitude
c              581   time between two pulses

c              601   time of all pulses, 1 pe
c              602   time of all pulses, eighted with amplitude, 1 pe
c              631   time of the first pulse, starting at tdark
c              632   time of the first pulse, starting at tdark, weighted with amplitude
c              661   time of the first pulse, starting at tlaser
c              662   time of the first pulse, starting at tlaser, weighted with amplitude
c              681   time between two pulses

c              701   ...   781  2 pe

c              801   ...   881 3 pe

c              901   ...   981 4 pe

c              histograms 1xxx as above, but only regular pulss

c              histograms 2xxx as above, but only non-quenched pulses

      LOGICAL         CHAIN
      CHARACTER*128   CFILE
      INTEGER         IDNEVT,NCHEVT,ICHEVT
      REAL            OBS(13)
*
      COMMON /PAWIDN/ IDNEVT,OBS
      COMMON /PAWCHN/ CHAIN, NCHEVT, ICHEVT
      COMMON /PAWCHC/ CFILE
*
*--   Ntuple Variable Declarations
*
      REAL xlgate(500),gate(10),start,q(10),q_r1(10),q_r2(10),q_r3(10)
     + ,q_r4(10),t(100),t_bef(100),t_aft(100),chi_peak(100)
     + ,chi_3tau(100),ampl(100),wid66(100),wid50(100),wid33(100)
     + ,q_bef(100),pulse(200,100),puls_q(100)
      INTEGER Nwf,N_puls,n_puls_nq
*
      COMMON /PAWCR4/ Nwf,xlgate,gate,start,q,q_r1,q_r2,q_r3,q_r4,N_puls
     + ,n_puls_nq,t,t_bef,t_aft,chi_peak,chi_3tau,ampl,wid66,wid50,wid33
     + ,q_bef,pulse,puls_q
*
      integer N_poiss
      parameter ( N_poiss = 5)

      integer ngates(N_poiss)
      integer lgates(N_poiss)

      vector pe_value
*     
*--   Enter user code here

      data lgates / 40, 200, 400, 2000, 4000  /     

c     ***  find the maximum amplitude in the laser gate
c     ***  to define a nyumber of initial photoelectrons

c         use 2 microsec (4000 samples for dark pulses)
      do i=1,N_poiss
         ngates(i) = 4000/lgates(i)
      enddo

      xmax = -999
      do i=80,120
         if(xlgate(i).gt.xmax) xmax=xlgate(i)
      enddo

      ipe = nint(xmax/pe_value(1)-0.2)
      if(xmax/pe_value(1).lt.0.5) ipe = 0

      call hfill(300,float(ipe),0,1.)
      call hfill(301,xmax/pe_value(1),0,1.)
      call hfill(302,float(ipe),xmax/pe_value(1),1.)
c     ------   revisit   pe definition ?   ---

      if(ipe.gt.4) ipe = 4


      do iq = 0,2

         ioff = 1000*iq



c     ***  401  all, all pulses
c     ***  501  no pe
c     ***  601 1 pe etc..

         do i = 1,N_puls
            if( iq.eq.0  .or. (iq.eq.1.and.puls_q(i).eq.0)   .or.
     +           (iq.eq.2.and.puls_q(i).eq.1.) ) then
               call hfill(ioff+idh,t(i),0,1.)
               call hfill(ioff+idh+1,t(i),0,ampl(i))
               call hfill(ioff+idh+(ipe+1)*100,t(i),0,1.)
               call hfill(ioff+idh+(ipe+1)+100+1,t(i),0,ampl(i))
            endif
         enddo


c     ****   dark, first pulse  431, etc..

         do i = 1,N_puls
            if( iq.eq.0  .or. (iq.eq.1.and.puls_q(i).eq.0)   .or.
     +           (iq.eq.2.and.puls_q(i).eq.1.) ) then

               if(t(i).gt.tdark) then
                  call hfill(ioff+idh+30,t(i),0,1.)
                  call hfill(ioff+idh+30+1,t(i),0,ampl(i))
                  call hfill(ioff+idh+30+(ipe+1)*100,t(i),0,1.)
                  call hfill(ioff+idh+30+(ipe+1)+100+1,t(i),0,ampl(i))
                  goto 10
               endif
            endif
         enddo

c     **** laser, first pulse  461 etc..

 10      continue

         do i = 1,N_puls
            if( iq.eq.0  .or. (iq.eq.1.and.puls_q(i).eq.0)   .or.
     +           (iq.eq.2.and.puls_q(i).eq.1.) ) then

               if(t(i).gt.tlaser) then
                  call hfill(ioff+idh+60,t(i),0,1.)
                  call hfill(ioff+idh+60+1,t(i),0,ampl(i))
                  call hfill(ioff+idh+60+(ipe+1)*100,t(i),0,1.)
                  call hfill(ioff+idh+60+(ipe+1)+100+1,t(i),0,ampl(i))
                  goto 20
               endif
            endif
         enddo

 20      continue


c     ****   distance between dark pulses   481

         do i = 2,N_puls
            if( iq.eq.0  .or. (iq.eq.1.and.puls_q(i).eq.0)   .or.
     +           (iq.eq.2.and.puls_q(i).eq.1.) ) then
               if(t(i-1).lt.1.45e-6.and.t(i).lt.2.45e-6) then
                  call hfill(ioff+idh+80,t(i)-t(i-1),0,1.)
               endif
            endif
         enddo


      enddo


c    ****    conunt pulses in small time intervals to get the true poisson mean


         do np = 1,N_poiss

            idh = 490 + np

            do j = 1,ngates(np)
               ndark = 0
               do i = 1,N_puls
               if(t(i).gt.tdark+4000) go to 110

                  if(t(i).gt.tdark+(j-1)*lgates(np)  .and.
     +                  t(i).le.tdark+(j)*lgates(np)) ndark = ndark + 1
 
               enddo

 110           continue
               call hfill(idh,float(ndark),0,1.)

            enddo

         enddo

      rates_fin = 0
*     
      END
